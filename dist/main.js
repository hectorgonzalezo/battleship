/*! For license information please see main.js.LICENSE.txt */
(self.webpackChunkBattleship=self.webpackChunkBattleship||[]).push([[179],{472:(n,t,r)=>{"use strict";var e=r(798),o=r.n(e);function i(n){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},i(n)}function a(){a=function(){return n};var n={},t=Object.prototype,r=t.hasOwnProperty,e="function"==typeof Symbol?Symbol:{},o=e.iterator||"@@iterator",c=e.asyncIterator||"@@asyncIterator",u=e.toStringTag||"@@toStringTag";function s(n,t,r){return Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),n[t]}try{s({},"")}catch(n){s=function(n,t,r){return n[t]=r}}function l(n,t,r,e){var o=t&&t.prototype instanceof A?t:A,i=Object.create(o.prototype),a=new x(e||[]);return i._invoke=function(n,t,r){var e="suspendedStart";return function(o,i){if("executing"===e)throw new Error("Generator is already running");if("completed"===e){if("throw"===o)throw i;return{value:void 0,done:!0}}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var c=C(a,r);if(c){if(c===f)continue;return c}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===e)throw e="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);e="executing";var u=p(n,t,r);if("normal"===u.type){if(e=r.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(e="completed",r.method="throw",r.arg=u.arg)}}}(n,r,a),i}function p(n,t,r){try{return{type:"normal",arg:n.call(t,r)}}catch(n){return{type:"throw",arg:n}}}n.wrap=l;var f={};function A(){}function d(){}function h(){}var g={};s(g,o,(function(){return this}));var y=Object.getPrototypeOf,v=y&&y(y(k([])));v&&v!==t&&r.call(v,o)&&(g=v);var m=h.prototype=A.prototype=Object.create(g);function b(n){["next","throw","return"].forEach((function(t){s(n,t,(function(n){return this._invoke(t,n)}))}))}function E(n,t){function e(o,a,c,u){var s=p(n[o],n,a);if("throw"!==s.type){var l=s.arg,f=l.value;return f&&"object"==i(f)&&r.call(f,"__await")?t.resolve(f.__await).then((function(n){e("next",n,c,u)}),(function(n){e("throw",n,c,u)})):t.resolve(f).then((function(n){l.value=n,c(l)}),(function(n){return e("throw",n,c,u)}))}u(s.arg)}var o;this._invoke=function(n,r){function i(){return new t((function(t,o){e(n,r,t,o)}))}return o=o?o.then(i,i):i()}}function C(n,t){var r=n.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(n.iterator.return&&(t.method="return",t.arg=void 0,C(n,t),"throw"===t.method))return f;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var e=p(r,n.iterator,t.arg);if("throw"===e.type)return t.method="throw",t.arg=e.arg,t.delegate=null,f;var o=e.arg;return o?o.done?(t[n.resultName]=o.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,f):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,f)}function w(n){var t={tryLoc:n[0]};1 in n&&(t.catchLoc=n[1]),2 in n&&(t.finallyLoc=n[2],t.afterLoc=n[3]),this.tryEntries.push(t)}function B(n){var t=n.completion||{};t.type="normal",delete t.arg,n.completion=t}function x(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(w,this),this.reset(!0)}function k(n){if(n){var t=n[o];if(t)return t.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var e=-1,i=function t(){for(;++e<n.length;)if(r.call(n,e))return t.value=n[e],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:S}}function S(){return{value:void 0,done:!0}}return d.prototype=h,s(m,"constructor",h),s(h,"constructor",d),d.displayName=s(h,u,"GeneratorFunction"),n.isGeneratorFunction=function(n){var t="function"==typeof n&&n.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,h):(n.__proto__=h,s(n,u,"GeneratorFunction")),n.prototype=Object.create(m),n},n.awrap=function(n){return{__await:n}},b(E.prototype),s(E.prototype,c,(function(){return this})),n.AsyncIterator=E,n.async=function(t,r,e,o,i){void 0===i&&(i=Promise);var a=new E(l(t,r,e,o),i);return n.isGeneratorFunction(r)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},b(m),s(m,u,"Generator"),s(m,o,(function(){return this})),s(m,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var t=[];for(var r in n)t.push(r);return t.reverse(),function r(){for(;t.length;){var e=t.pop();if(e in n)return r.value=e,r.done=!1,r}return r.done=!0,r}},n.values=k,x.prototype={constructor:x,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(B),!n)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function e(r,e){return a.type="throw",a.arg=n,t.next=r,e&&(t.method="next",t.arg=void 0),!!e}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return e("end");if(i.tryLoc<=this.prev){var c=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(c&&u){if(this.prev<i.catchLoc)return e(i.catchLoc,!0);if(this.prev<i.finallyLoc)return e(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return e(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return e(i.finallyLoc)}}}},abrupt:function(n,t){for(var e=this.tryEntries.length-1;e>=0;--e){var o=this.tryEntries[e];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=n,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,f):this.complete(a)},complete:function(n,t){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&t&&(this.next=t),f},finish:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===n)return this.complete(r.completion,r.afterLoc),B(r),f}},catch:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===n){var e=r.completion;if("throw"===e.type){var o=e.arg;B(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,r){return this.delegate={iterator:k(n),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),f}},n}function c(n,t,r,e,o,i,a){try{var c=n[i](a),u=c.value}catch(n){return void r(n)}c.done?t(u):Promise.resolve(u).then(e,o)}function u(n){return function(){var t=this,r=arguments;return new Promise((function(e,o){var i=n.apply(t,r);function a(n){c(i,e,o,a,u,"next",n)}function u(n){c(i,e,o,a,u,"throw",n)}a(void 0)}))}}var s=document.querySelector("#player1-board"),l=document.querySelector("#player2-board"),p=document.querySelector("header > div");function f(n){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=Array(10).fill().map((function(){return[{},{},{},{},{},{},{},{},{},{}]}));r.forEach((function(r,e){var o=document.createElement("div");o.classList.add("row"),o.setAttribute("data",e),n.append(o),r.forEach((function(n,r){var e=document.createElement("div");e.classList.add("square"),t&&e.classList.add("enemy"),e.setAttribute("data",r),o.append(e)}))}))}function A(n){return d.apply(this,arguments)}function d(){return(d=u(a().mark((function n(t){var r,e;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:r=t.getCurrentBoard(),e=t.getDiv(),r.forEach((function(n,t){n.forEach((function(n,r){void 0!==n.ship&&e.children[t].children[r].classList.add("ship-square")}))}));case 3:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function h(){var n=document.querySelector(".hit.just-hit");null!==n&&n.classList.remove("just-hit")}function g(){return g=u(a().mark((function n(t,r){return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,A(t);case 2:return n.next=4,A(r);case 4:o().publish("enemy-loaded");case 5:case"end":return n.stop()}}),n)}))),g.apply(this,arguments)}var y={startBoards:function(n,t){f(s),f(l,!0),function(n,t){g.apply(this,arguments)}(n,t)},renderShips:A,updateBoardAt:function(n,t,r){var e=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=n.getDiv(),i=o.children[t].children[r];i.classList.add("hit"),h(),e||i.classList.add("just-hit")},updateDisplay:function(n){p.innerText=n}};const v=y,m=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:9;return Math.floor(Math.random()*(n+1))};function b(n){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},b(n)}function E(){E=function(){return n};var n={},t=Object.prototype,r=t.hasOwnProperty,e="function"==typeof Symbol?Symbol:{},o=e.iterator||"@@iterator",i=e.asyncIterator||"@@asyncIterator",a=e.toStringTag||"@@toStringTag";function c(n,t,r){return Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),n[t]}try{c({},"")}catch(n){c=function(n,t,r){return n[t]=r}}function u(n,t,r,e){var o=t&&t.prototype instanceof p?t:p,i=Object.create(o.prototype),a=new x(e||[]);return i._invoke=function(n,t,r){var e="suspendedStart";return function(o,i){if("executing"===e)throw new Error("Generator is already running");if("completed"===e){if("throw"===o)throw i;return{value:void 0,done:!0}}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var c=C(a,r);if(c){if(c===l)continue;return c}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===e)throw e="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);e="executing";var u=s(n,t,r);if("normal"===u.type){if(e=r.done?"completed":"suspendedYield",u.arg===l)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(e="completed",r.method="throw",r.arg=u.arg)}}}(n,r,a),i}function s(n,t,r){try{return{type:"normal",arg:n.call(t,r)}}catch(n){return{type:"throw",arg:n}}}n.wrap=u;var l={};function p(){}function f(){}function A(){}var d={};c(d,o,(function(){return this}));var h=Object.getPrototypeOf,g=h&&h(h(k([])));g&&g!==t&&r.call(g,o)&&(d=g);var y=A.prototype=p.prototype=Object.create(d);function v(n){["next","throw","return"].forEach((function(t){c(n,t,(function(n){return this._invoke(t,n)}))}))}function m(n,t){function e(o,i,a,c){var u=s(n[o],n,i);if("throw"!==u.type){var l=u.arg,p=l.value;return p&&"object"==b(p)&&r.call(p,"__await")?t.resolve(p.__await).then((function(n){e("next",n,a,c)}),(function(n){e("throw",n,a,c)})):t.resolve(p).then((function(n){l.value=n,a(l)}),(function(n){return e("throw",n,a,c)}))}c(u.arg)}var o;this._invoke=function(n,r){function i(){return new t((function(t,o){e(n,r,t,o)}))}return o=o?o.then(i,i):i()}}function C(n,t){var r=n.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(n.iterator.return&&(t.method="return",t.arg=void 0,C(n,t),"throw"===t.method))return l;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return l}var e=s(r,n.iterator,t.arg);if("throw"===e.type)return t.method="throw",t.arg=e.arg,t.delegate=null,l;var o=e.arg;return o?o.done?(t[n.resultName]=o.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,l):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,l)}function w(n){var t={tryLoc:n[0]};1 in n&&(t.catchLoc=n[1]),2 in n&&(t.finallyLoc=n[2],t.afterLoc=n[3]),this.tryEntries.push(t)}function B(n){var t=n.completion||{};t.type="normal",delete t.arg,n.completion=t}function x(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(w,this),this.reset(!0)}function k(n){if(n){var t=n[o];if(t)return t.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var e=-1,i=function t(){for(;++e<n.length;)if(r.call(n,e))return t.value=n[e],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:S}}function S(){return{value:void 0,done:!0}}return f.prototype=A,c(y,"constructor",A),c(A,"constructor",f),f.displayName=c(A,a,"GeneratorFunction"),n.isGeneratorFunction=function(n){var t="function"==typeof n&&n.constructor;return!!t&&(t===f||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,A):(n.__proto__=A,c(n,a,"GeneratorFunction")),n.prototype=Object.create(y),n},n.awrap=function(n){return{__await:n}},v(m.prototype),c(m.prototype,i,(function(){return this})),n.AsyncIterator=m,n.async=function(t,r,e,o,i){void 0===i&&(i=Promise);var a=new m(u(t,r,e,o),i);return n.isGeneratorFunction(r)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},v(y),c(y,a,"Generator"),c(y,o,(function(){return this})),c(y,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var t=[];for(var r in n)t.push(r);return t.reverse(),function r(){for(;t.length;){var e=t.pop();if(e in n)return r.value=e,r.done=!1,r}return r.done=!0,r}},n.values=k,x.prototype={constructor:x,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(B),!n)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function e(r,e){return a.type="throw",a.arg=n,t.next=r,e&&(t.method="next",t.arg=void 0),!!e}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return e("end");if(i.tryLoc<=this.prev){var c=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(c&&u){if(this.prev<i.catchLoc)return e(i.catchLoc,!0);if(this.prev<i.finallyLoc)return e(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return e(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return e(i.finallyLoc)}}}},abrupt:function(n,t){for(var e=this.tryEntries.length-1;e>=0;--e){var o=this.tryEntries[e];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=n,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,l):this.complete(a)},complete:function(n,t){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&t&&(this.next=t),l},finish:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===n)return this.complete(r.completion,r.afterLoc),B(r),l}},catch:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===n){var e=r.completion;if("throw"===e.type){var o=e.arg;B(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,r){return this.delegate={iterator:k(n),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),l}},n}function C(n,t,r,e,o,i,a){try{var c=n[i](a),u=c.value}catch(n){return void r(n)}c.done?t(u):Promise.resolve(u).then(e,o)}function w(n){return function(){var t=this,r=arguments;return new Promise((function(e,o){var i=n.apply(t,r);function a(n){C(i,e,o,a,c,"next",n)}function c(n){C(i,e,o,a,c,"throw",n)}a(void 0)}))}}function B(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var e,o,i=[],a=!0,c=!1;try{for(r=r.call(n);!(a=(e=r.next()).done)&&(i.push(e.value),!t||i.length!==t);a=!0);}catch(n){c=!0,o=n}finally{try{a||null==r.return||r.return()}finally{if(c)throw o}}return i}}(n,t)||function(n,t){if(n){if("string"==typeof n)return x(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?x(n,t):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}var k=function(n){var t=!0===n.hit,r=void 0!==n.ship&&0===n.ship.getSquares()[n.shipSquare];return t||r},S=function(n){var t=n[0]<0||n[0]>9,r=n[1]<0||n[1]>9;return t||r},q=function(n){var t=new Array(n).fill(1);return{isSunk:function(){return t.every((function(n){return 0===n}))},getLength:function(){return n},getHit:function(r){return r>=n||r<0||(t[r]=0),t},getSquares:function(){return t}}},L=function(n){var t=document.querySelector("#player".concat(n,"-board")),r=Array(10).fill().map((function(){return[{},{},{},{},{},{},{},{},{},{}]}));function e(){return r.every((function(n){return n.every((function(n){return void 0===n.ship||n.ship.isSunk()}))}))}function i(n,t,e){var o=[];[-1,0,1].forEach((function(i){if(n+i>=0&&n+i<=9){var a=r[n+i].slice(Math.max(0,t-1),Math.min(10,t+e+1));o.push(a)}}));var i=r[n].slice(t,t+e);return[o.flat(),i]}function a(n,t,e){var o,i;return o=r.filter((function(t,r){return r>=Math.max(0,n-1)&&r<Math.min(10,n+e+1)})),i=r.filter((function(t,r){return r>=n&&r<n+e})),o=o.map((function(n){return n.filter((function(n,r){return r>=Math.max(0,t-1)||r<=Math.min(9,t+1)}))})),i=i.map((function(n){return n.filter((function(n,r){return r===t}))})),[o=o.flat(),i=i.flat()]}function c(n,t,r,e){var o,c;if("horizontal"===e){var u=B(i(t,r,n),2);o=u[0],c=u[1]}else{var s=B(a(t,r,n),2);o=s[0],c=s[1]}var l=o.some((function(n){return n.hasOwnProperty("ship")})),p=c.length!==n;return l||p}function u(n,t,e){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"horizontal",i=n.getLength();if(!c(i,t,e,o)){if("horizontal"===o)for(var a=0;a<i;a++){var u=r[t][a+e];u.ship=n,u.shipSquare=a,u.direction=o}else if("vertical"===o)for(var s=0;s<i;s++){var l=r[t+s][e];l.ship=n,l.shipSquare=s,l.direction=o}return n}}function s(){return s=w(E().mark((function n(){var t,r,e,o,i,a,c,s=arguments;return E().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:for(t=s.length>0&&void 0!==s[0]?s[0]:1,r=[];r.length!==t;)e=m(4)+1,o=m(9),i=m(9),a=["horizontal","vertical"][m(1)],void 0!==(c=u(q(e),o,i,a))&&r.push(c);return n.abrupt("return",Promise.resolve(r));case 4:case"end":return n.stop()}}),n)}))),s.apply(this,arguments)}return{getCurrentBoard:function(){return r},getDiv:function(){return t},placeShip:u,receiveAttack:function(n,t){if(!e()){var c=r[n][t];return k(c)?"Cant hit the same spot twice":(c.hasOwnProperty("ship")?(c.ship.getHit(c.shipSquare),function(n,t,r){if(n.ship.isSunk()){var e=function(n,t,r){var e=n.shipSquare;return"horizontal"===n.direction?[t,r-e]:[t-e,r]}(n,t,r),c=n.ship.getLength();("horizontal"===n.direction?B(i(e[0],e[1],c),1)[0]:B(a(e[0],e[1],c),1)[0]).filter((function(n){return void 0===n.ship})).forEach((function(n){return n.hit=!0})),o().publish("surrounding-squares-sunk")}}(c,n,t)):c.hit=!0,e()?"Ships were just sunk":c)}return"Ships already sunk"},areAllShipsSunk:e,placeRandomShips:function(){return s.apply(this,arguments)}}};function j(n,t){return{playTurn:function(t,r){return n.receiveAttack(Number(t),Number(r))},getNumber:function(){return t}}}var O,I,P=L(1),T=L(2),Y=j(T,1),z=(I=j(O=P,2),Object.assign(I,{playRandom:function(){for(var n=m(),t=m(),r=O.getCurrentBoard()[n][t];k(r);)n=m(),t=m(),r=O.getCurrentBoard()[n][t];return[[n,t],O.receiveAttack(n,t)]},playAround:function n(t){var r,e,o=m(1)*[1,-1][m(1)],i=t[0]+o;r=0===o?m(1)*[1,-1][m(1)]:0;var a,c=t[1]+r;if(S([i,c])||(a=O.getCurrentBoard()[i][c]),S([i,c])||k(a)){var u=B(n(t),2),s=B(u[0],2);i=s[0],c=s[1],e=u[1]}else e=O.receiveAttack(i,c);return[[i,c],e]}}));P.placeRandomShips(10),T.placeRandomShips(10),v.startBoards(P,T);const _={player1:Y,player2:z,player1Board:P,player2Board:T};function D(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var e,o,i=[],a=!0,c=!1;try{for(r=r.call(n);!(a=(e=r.next()).done)&&(i.push(e.value),!t||i.length!==t);a=!0);}catch(n){c=!0,o=n}finally{try{a||null==r.return||r.return()}finally{if(c)throw o}}return i}}(n,t)||function(n,t){if(n){if("string"==typeof n)return N(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?N(n,t):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function N(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}var M=document.querySelectorAll("#ships .ship"),R=document.querySelector("#pop-up .board");function G(n){var t,r,e,o=n.target;t=o.parentElement.getAttribute("data"),r=o.getAttribute("data"),e=_.player1.playTurn(t,r),v.updateBoardAt(_.player2Board,t,r),void 0===e.ship&&(_.player2Board.areAllShipsSunk()?v.updateDisplay("You won!"):_.player1Board.areAllShipsSunk()?v.updateDisplay("Sorry, you lost!"):Z(),document.querySelectorAll(".square.enemy").forEach((function(n){n.removeEventListener("click",G)})))}function F(){document.querySelectorAll(".square.enemy").forEach((function(n){n.addEventListener("click",G)})),v.updateDisplay("Your turn")}function Z(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];v.updateDisplay("Player2 turn"),setTimeout((function(){var e,o;if(Array.isArray(t)&&!r){var i=D(_.player2.playAround(t),2);e=i[0],o=i[1]}else{var a=D(_.player2.playRandom(),2);e=a[0],o=a[1]}v.updateBoardAt(_.player1Board,e[0],e[1]),void 0!==o.ship?Z(2*n,e,o.ship.isSunk()):_.player1Board.areAllShipsSunk()?v.updateDisplay("Sorry, you lost!"):F()}),1e3*Math.random()+n)}function U(n){n.getCurrentBoard().forEach((function(t,r){t.forEach((function(t,e){!0===t.hit&&(console.log(n),v.updateBoardAt(n,r,e,!0))}))}))}M.forEach((function(n){n.addEventListener("dragstart",(function(n){n.currentTarget.classList.add("dragging"),n.dataTransfer.clearData(),n.dataTransfer.setData("text/plain",n.target.id)})),n.addEventListener("dragend",(function(n){n.currentTarget.classList.remove("dragging")}))})),Array.from(R.children).forEach((function(n){Array.from(n.children).forEach((function(n){n.addEventListener("drop",(function(n){n.preventDefault();var t=n.dataTransfer.getData("text/plain"),r=document.getElementById(t);r.getAttribute("data"),r.remove()})),n.addEventListener("dragover",(function(n){return n.preventDefault()}))}))})),o().subscribe("enemy-loaded",F),o().subscribe("surrounding-squares-sunk",(function(){U(_.player1Board),U(_.player2Board)}));var W=r(379),H=r.n(W),X=r(795),Q=r.n(X),J=r(569),$=r.n(J),V=r(565),K=r.n(V),nn=r(216),tn=r.n(nn),rn=r(589),en=r.n(rn),on=r(426),an={};an.styleTagTransform=en(),an.setAttributes=K(),an.insert=$().bind(null,"head"),an.domAPI=Q(),an.insertStyleElement=tn(),H()(on.Z,an),on.Z&&on.Z.locals&&on.Z.locals},917:(n,t,r)=>{"use strict";r.d(t,{Z:()=>c});var e=r(537),o=r.n(e),i=r(645),a=r.n(i)()(o());a.push([n.id,'/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n:root {\n  box-sizing: border-box;\n}\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n',"",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;AACD;EACE,sBAAsB;AACxB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB",sourcesContent:['/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n:root {\n  box-sizing: border-box;\n}\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n'],sourceRoot:""}]);const c=a},426:(n,t,r)=>{"use strict";r.d(t,{Z:()=>s});var e=r(537),o=r.n(e),i=r(645),a=r.n(i),c=r(917),u=a()(o());u.i(c.Z),u.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),u.push([n.id,':root {\n  --board-gap: 2px;\n  --board-size: calc(430px + calc(var(--board-gap) * 10));\n  --color-water: rgb(135, 217, 214);\n  --color-water-dark: rgb(56, 127, 125);\n  --color-background: #27272a;\n  --color-light: #f4f4f5;\n  --color-medium-light: #a1a1aa;\n  --color-medium-dark: #52525b;\n  --color-dark: #3f3f46;\n  --color-complementary1-light: rgb(162, 242, 144);\n  --color-complementary1-dark: rgb(14, 60, 13);\n  --color-complementary2-light: rgb(245, 176, 118);\n  --color-complementary2-dark: rgb(131, 63, 14);\n  font-family: "Roboto", sans-serif;\n}\n\n/* * {\n    outline: dashed red;\n}  */\n\nbody {\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  color: var(--color-light);\n}\n\n#game {\n  background-color: var(--color-background);\n  height: 100vh;\n  width: 100vw;\n  display: grid;\n  grid-template-rows: 1fr 5fr 50px;\n  align-items: center;\n}\n\n.inactive {\n  position: absolute;\n  right: -100%;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: end;\n}\n\nheader > div {\n  background-color: var(--color-water-dark);\n  width: max(400px, 40vw);\n  color: var(--color-light);\n  padding: 20px;\n  text-align: center;\n  font-size: 2rem;\n  letter-spacing: 0.2rem;\n  border-radius: 1rem;\n}\n\nheader > button {\n  background-color: red;\n}\n\nmain {\n  width: 100%;\n  display: grid;\n  grid-template-rows: 50px 1fr;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  gap: auto;\n  align-items: center;\n}\n\nmain > h1 {\n  color: var(--color-light);\n  grid-row: 1 / 2;\n}\n\n.board {\n  width: var(--board-size);\n  height: var(--board-size);\n  background-color: var(--color-background);\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  gap: var(--board-gap);\n}\n\n.row {\n  display: flex;\n  height: auto;\n  gap: var(--board-gap);\n}\n\n.square {\n  background-color: var(--color-water);\n  width: 100%;\n  height: 100%;\n}\n\n.square.enemy {\n    background-color: #52525b;\n}\n.ship-square {\n  background-color: blue;\n}\n\n.square.ship-square.hit {\n  background-color: green;\n}\n\n.square.ship-square.hit.just-hit {\n  background-color: rgb(1, 43, 1);\n}\n.square.hit {\n  transition: all 1s;\n  background-color: yellow;\n}\n\n.square.hit.just-hit {\n  background-color: red;\n}\n\n.square:hover {\n  background-color: var(--color-water-dark);\n}\n\n.square.enemy:hover {\n  background-color: rgb(227, 134, 134);\n}\n\nfooter {\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  width: 100%;\n  gap: 2vw;\n  background-color: var(--color-background);\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,\n    Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-size: 1.5rem;\n}\n\n#github-logo {\n  height: 30px;\n}\n\n#pop-up {\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--color-background);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: grid;\n  justify-items: center;\n  grid-template-rows: 1fr 50px 8fr;\n  grid-template-columns: 2fr 1fr;\n  grid-template-areas:\n    "title title"\n    "description description"\n    "board ships";\n}\n\n#pop-up.inactive {\n  left: -100%;\n}\n#pop-up article {\n  grid-area: title;\n}\n\n#pop-up h3 {\n  grid-area: description;\n}\n\n#pop-up .board {\n  grid-area: board;\n}\n\n#ships {\n  grid-area: ships;\n}\n\n#pop-up article {\n  background: linear-gradient(\n    to bottom,\n    rgb(135, 135, 236),\n    var(--color-water)\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-align: center;\n}\n\n#title {\n  font-size: 3rem;\n  font-weight: bold;\n  letter-spacing: 0.3rem;\n  padding: 20px;\n}\n\n#ships {\n  display: grid;\n  align-items: center;\n  justify-items: start;\n}\n\n#ships .ship {\n  display: flex;\n  gap: var(--board-gap);\n}\n\n.ship.dragging {\n  opacity: 0.5;\n}\n\n#ships > .multiple-ships {\n  display: flex;\n  gap: 50px;\n}\n\n@media only screen and (max-width: 950px) {\n  main {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: space-evenly;\n    gap: 30px;\n    padding-top: 20px;\n  }\n\n  header {\n    align-self: center;\n  }\n  #game {\n    background-color: var(--color-background);\n    height: auto;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAIA;EACE,gBAAgB;EAChB,uDAAuD;EACvD,iCAAiC;EACjC,qCAAqC;EACrC,2BAA2B;EAC3B,sBAAsB;EACtB,6BAA6B;EAC7B,4BAA4B;EAC5B,qBAAqB;EACrB,gDAAgD;EAChD,4CAA4C;EAC5C,gDAAgD;EAChD,6CAA6C;EAC7C,iCAAiC;AACnC;;AAEA;;IAEI;;AAEJ;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;EACE,yCAAyC;EACzC,aAAa;EACb,YAAY;EACZ,aAAa;EACb,gCAAgC;EAChC,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,yCAAyC;EACzC,uBAAuB;EACvB,yBAAyB;EACzB,aAAa;EACb,kBAAkB;EAClB,eAAe;EACf,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,4BAA4B;EAC5B,qCAAqC;EACrC,qBAAqB;EACrB,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;EACzB,eAAe;AACjB;;AAEA;EACE,wBAAwB;EACxB,yBAAyB;EACzB,yCAAyC;EACzC,aAAa;EACb,mCAAmC;EACnC,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,oCAAoC;EACpC,WAAW;EACX,YAAY;AACd;;AAEA;IACI,yBAAyB;AAC7B;AACA;EACE,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,+BAA+B;AACjC;AACA;EACE,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,YAAY;EACZ,WAAW;EACX,QAAQ;EACR,yCAAyC;EACzC,YAAY;EACZ;+EAC6E;EAC7E,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,yCAAyC;EACzC,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,aAAa;EACb,qBAAqB;EACrB,gCAAgC;EAChC,8BAA8B;EAC9B;;;iBAGe;AACjB;;AAEA;EACE,WAAW;AACb;AACA;EACE,gBAAgB;AAClB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE;;;;GAIC;EACD,6BAA6B;EAC7B,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,qBAAqB;AACvB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE;IACE,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,6BAA6B;IAC7B,SAAS;IACT,iBAAiB;EACnB;;EAEA;IACE,kBAAkB;EACpB;EACA;IACE,yCAAyC;IACzC,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;EACrB;AACF",sourcesContent:['@import "./reset.css";\n\n@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");\n\n:root {\n  --board-gap: 2px;\n  --board-size: calc(430px + calc(var(--board-gap) * 10));\n  --color-water: rgb(135, 217, 214);\n  --color-water-dark: rgb(56, 127, 125);\n  --color-background: #27272a;\n  --color-light: #f4f4f5;\n  --color-medium-light: #a1a1aa;\n  --color-medium-dark: #52525b;\n  --color-dark: #3f3f46;\n  --color-complementary1-light: rgb(162, 242, 144);\n  --color-complementary1-dark: rgb(14, 60, 13);\n  --color-complementary2-light: rgb(245, 176, 118);\n  --color-complementary2-dark: rgb(131, 63, 14);\n  font-family: "Roboto", sans-serif;\n}\n\n/* * {\n    outline: dashed red;\n}  */\n\nbody {\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  color: var(--color-light);\n}\n\n#game {\n  background-color: var(--color-background);\n  height: 100vh;\n  width: 100vw;\n  display: grid;\n  grid-template-rows: 1fr 5fr 50px;\n  align-items: center;\n}\n\n.inactive {\n  position: absolute;\n  right: -100%;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: end;\n}\n\nheader > div {\n  background-color: var(--color-water-dark);\n  width: max(400px, 40vw);\n  color: var(--color-light);\n  padding: 20px;\n  text-align: center;\n  font-size: 2rem;\n  letter-spacing: 0.2rem;\n  border-radius: 1rem;\n}\n\nheader > button {\n  background-color: red;\n}\n\nmain {\n  width: 100%;\n  display: grid;\n  grid-template-rows: 50px 1fr;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  gap: auto;\n  align-items: center;\n}\n\nmain > h1 {\n  color: var(--color-light);\n  grid-row: 1 / 2;\n}\n\n.board {\n  width: var(--board-size);\n  height: var(--board-size);\n  background-color: var(--color-background);\n  display: grid;\n  grid-template-rows: repeat(10, 1fr);\n  gap: var(--board-gap);\n}\n\n.row {\n  display: flex;\n  height: auto;\n  gap: var(--board-gap);\n}\n\n.square {\n  background-color: var(--color-water);\n  width: 100%;\n  height: 100%;\n}\n\n.square.enemy {\n    background-color: #52525b;\n}\n.ship-square {\n  background-color: blue;\n}\n\n.square.ship-square.hit {\n  background-color: green;\n}\n\n.square.ship-square.hit.just-hit {\n  background-color: rgb(1, 43, 1);\n}\n.square.hit {\n  transition: all 1s;\n  background-color: yellow;\n}\n\n.square.hit.just-hit {\n  background-color: red;\n}\n\n.square:hover {\n  background-color: var(--color-water-dark);\n}\n\n.square.enemy:hover {\n  background-color: rgb(227, 134, 134);\n}\n\nfooter {\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  width: 100%;\n  gap: 2vw;\n  background-color: var(--color-background);\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,\n    Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-size: 1.5rem;\n}\n\n#github-logo {\n  height: 30px;\n}\n\n#pop-up {\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--color-background);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: grid;\n  justify-items: center;\n  grid-template-rows: 1fr 50px 8fr;\n  grid-template-columns: 2fr 1fr;\n  grid-template-areas:\n    "title title"\n    "description description"\n    "board ships";\n}\n\n#pop-up.inactive {\n  left: -100%;\n}\n#pop-up article {\n  grid-area: title;\n}\n\n#pop-up h3 {\n  grid-area: description;\n}\n\n#pop-up .board {\n  grid-area: board;\n}\n\n#ships {\n  grid-area: ships;\n}\n\n#pop-up article {\n  background: linear-gradient(\n    to bottom,\n    rgb(135, 135, 236),\n    var(--color-water)\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-align: center;\n}\n\n#title {\n  font-size: 3rem;\n  font-weight: bold;\n  letter-spacing: 0.3rem;\n  padding: 20px;\n}\n\n#ships {\n  display: grid;\n  align-items: center;\n  justify-items: start;\n}\n\n#ships .ship {\n  display: flex;\n  gap: var(--board-gap);\n}\n\n.ship.dragging {\n  opacity: 0.5;\n}\n\n#ships > .multiple-ships {\n  display: flex;\n  gap: 50px;\n}\n\n@media only screen and (max-width: 950px) {\n  main {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: space-evenly;\n    gap: 30px;\n    padding-top: 20px;\n  }\n\n  header {\n    align-self: center;\n  }\n  #game {\n    background-color: var(--color-background);\n    height: auto;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n'],sourceRoot:""}]);const s=u},645:n=>{"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var r="",e=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),e&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=n(t),e&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(n,r,e,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(e)for(var c=0;c<this.length;c++){var u=this[c][0];null!=u&&(a[u]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);e&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:n=>{"use strict";n.exports=function(n){var t=n[1],r=n[3];if(!r)return t;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),i="/*# ".concat(o," */"),a=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},798:function(n,t,r){n=r.nmd(n),function(r,e){"use strict";var o={};r.PubSub?(o=r.PubSub,console.warn("PubSub already loaded, using existing version")):(r.PubSub=o,function(n){var t={},r=-1;function e(n,t,r){try{n(t,r)}catch(n){setTimeout(function(n){return function(){throw n}}(n),0)}}function o(n,t,r){n(t,r)}function i(n,r,i,a){var c,u=t[r],s=a?o:e;if(Object.prototype.hasOwnProperty.call(t,r))for(c in u)Object.prototype.hasOwnProperty.call(u,c)&&s(u[c],n,i)}function a(n){var r=String(n);return Boolean(Object.prototype.hasOwnProperty.call(t,r)&&function(n){var t;for(t in n)if(Object.prototype.hasOwnProperty.call(n,t))return!0;return!1}(t[r]))}function c(n,t,r,e){var o=function(n,t,r){return function(){var e=String(n),o=e.lastIndexOf(".");for(i(n,n,t,r);-1!==o;)o=(e=e.substr(0,o)).lastIndexOf("."),i(n,e,t,r);i(n,"*",t,r)}}(n="symbol"==typeof n?n.toString():n,t,e);return!!function(n){for(var t=String(n),r=a(t)||a("*"),e=t.lastIndexOf(".");!r&&-1!==e;)e=(t=t.substr(0,e)).lastIndexOf("."),r=a(t);return r}(n)&&(!0===r?o():setTimeout(o,0),!0)}n.publish=function(t,r){return c(t,r,!1,n.immediateExceptions)},n.publishSync=function(t,r){return c(t,r,!0,n.immediateExceptions)},n.subscribe=function(n,e){if("function"!=typeof e)return!1;n="symbol"==typeof n?n.toString():n,Object.prototype.hasOwnProperty.call(t,n)||(t[n]={});var o="uid_"+String(++r);return t[n][o]=e,o},n.subscribeAll=function(t){return n.subscribe("*",t)},n.subscribeOnce=function(t,r){var e=n.subscribe(t,(function(){n.unsubscribe(e),r.apply(this,arguments)}));return n},n.clearAllSubscriptions=function(){t={}},n.clearSubscriptions=function(n){var r;for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&0===r.indexOf(n)&&delete t[r]},n.countSubscriptions=function(n){var r,e,o=0;for(r in t)if(Object.prototype.hasOwnProperty.call(t,r)&&0===r.indexOf(n)){for(e in t[r])o++;break}return o},n.getSubscriptions=function(n){var r,e=[];for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&0===r.indexOf(n)&&e.push(r);return e},n.unsubscribe=function(r){var e,o,i,a="string"==typeof r&&(Object.prototype.hasOwnProperty.call(t,r)||function(n){var r;for(r in t)if(Object.prototype.hasOwnProperty.call(t,r)&&0===r.indexOf(n))return!0;return!1}(r)),c=!a&&"string"==typeof r,u="function"==typeof r,s=!1;if(!a){for(e in t)if(Object.prototype.hasOwnProperty.call(t,e)){if(o=t[e],c&&o[r]){delete o[r],s=r;break}if(u)for(i in o)Object.prototype.hasOwnProperty.call(o,i)&&o[i]===r&&(delete o[i],s=!0)}return s}n.clearSubscriptions(r)}}(o)),void 0!==n&&n.exports&&(t=n.exports=o),t.PubSub=o,n.exports=t=o}("object"==typeof window&&window||this)},379:n=>{"use strict";var t=[];function r(n){for(var r=-1,e=0;e<t.length;e++)if(t[e].identifier===n){r=e;break}return r}function e(n,e){for(var i={},a=[],c=0;c<n.length;c++){var u=n[c],s=e.base?u[0]+e.base:u[0],l=i[s]||0,p="".concat(s," ").concat(l);i[s]=l+1;var f=r(p),A={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==f)t[f].references++,t[f].updater(A);else{var d=o(A,e);e.byIndex=c,t.splice(c,0,{identifier:p,updater:d,references:1})}a.push(p)}return a}function o(n,t){var r=t.domAPI(t);return r.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;r.update(n=t)}else r.remove()}}n.exports=function(n,o){var i=e(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=r(i[a]);t[c].references--}for(var u=e(n,o),s=0;s<i.length;s++){var l=r(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=u}}},569:n=>{"use strict";var t={};n.exports=function(n,r){var e=function(n){if(void 0===t[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}t[n]=r}return t[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(r)}},216:n=>{"use strict";n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,r)=>{"use strict";n.exports=function(n){var t=r.nc;t&&n.setAttribute("nonce",t)}},795:n=>{"use strict";n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(r){!function(n,t,r){var e="";r.supports&&(e+="@supports (".concat(r.supports,") {")),r.media&&(e+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(e+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),e+=r.css,o&&(e+="}"),r.media&&(e+="}"),r.supports&&(e+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(e,n,t.options)}(t,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{"use strict";n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},n=>{n(n.s=472)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,