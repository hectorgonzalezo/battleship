/*! For license information please see main.js.LICENSE.txt */
(self.webpackChunkBattleship=self.webpackChunkBattleship||[]).push([[179],{632:(n,t,r)=>{"use strict";var e=r(798),o=r.n(e);function i(n){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},i(n)}function a(){a=function(){return n};var n={},t=Object.prototype,r=t.hasOwnProperty,e="function"==typeof Symbol?Symbol:{},o=e.iterator||"@@iterator",s=e.asyncIterator||"@@asyncIterator",c=e.toStringTag||"@@toStringTag";function u(n,t,r){return Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),n[t]}try{u({},"")}catch(n){u=function(n,t,r){return n[t]=r}}function l(n,t,r,e){var o=t&&t.prototype instanceof d?t:d,i=Object.create(o.prototype),a=new x(e||[]);return i._invoke=function(n,t,r){var e="suspendedStart";return function(o,i){if("executing"===e)throw new Error("Generator is already running");if("completed"===e){if("throw"===o)throw i;return{value:void 0,done:!0}}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var s=E(a,r);if(s){if(s===p)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===e)throw e="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);e="executing";var c=A(n,t,r);if("normal"===c.type){if(e=r.done?"completed":"suspendedYield",c.arg===p)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(e="completed",r.method="throw",r.arg=c.arg)}}}(n,r,a),i}function A(n,t,r){try{return{type:"normal",arg:n.call(t,r)}}catch(n){return{type:"throw",arg:n}}}n.wrap=l;var p={};function d(){}function h(){}function f(){}var g={};u(g,o,(function(){return this}));var y=Object.getPrototypeOf,v=y&&y(y(k([])));v&&v!==t&&r.call(v,o)&&(g=v);var m=f.prototype=d.prototype=Object.create(g);function b(n){["next","throw","return"].forEach((function(t){u(n,t,(function(n){return this._invoke(t,n)}))}))}function C(n,t){function e(o,a,s,c){var u=A(n[o],n,a);if("throw"!==u.type){var l=u.arg,p=l.value;return p&&"object"==i(p)&&r.call(p,"__await")?t.resolve(p.__await).then((function(n){e("next",n,s,c)}),(function(n){e("throw",n,s,c)})):t.resolve(p).then((function(n){l.value=n,s(l)}),(function(n){return e("throw",n,s,c)}))}c(u.arg)}var o;this._invoke=function(n,r){function i(){return new t((function(t,o){e(n,r,t,o)}))}return o=o?o.then(i,i):i()}}function E(n,t){var r=n.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(n.iterator.return&&(t.method="return",t.arg=void 0,E(n,t),"throw"===t.method))return p;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var e=A(r,n.iterator,t.arg);if("throw"===e.type)return t.method="throw",t.arg=e.arg,t.delegate=null,p;var o=e.arg;return o?o.done?(t[n.resultName]=o.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,p):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,p)}function B(n){var t={tryLoc:n[0]};1 in n&&(t.catchLoc=n[1]),2 in n&&(t.finallyLoc=n[2],t.afterLoc=n[3]),this.tryEntries.push(t)}function w(n){var t=n.completion||{};t.type="normal",delete t.arg,n.completion=t}function x(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(B,this),this.reset(!0)}function k(n){if(n){var t=n[o];if(t)return t.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var e=-1,i=function t(){for(;++e<n.length;)if(r.call(n,e))return t.value=n[e],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:S}}function S(){return{value:void 0,done:!0}}return h.prototype=f,u(m,"constructor",f),u(f,"constructor",h),h.displayName=u(f,c,"GeneratorFunction"),n.isGeneratorFunction=function(n){var t="function"==typeof n&&n.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,f):(n.__proto__=f,u(n,c,"GeneratorFunction")),n.prototype=Object.create(m),n},n.awrap=function(n){return{__await:n}},b(C.prototype),u(C.prototype,s,(function(){return this})),n.AsyncIterator=C,n.async=function(t,r,e,o,i){void 0===i&&(i=Promise);var a=new C(l(t,r,e,o),i);return n.isGeneratorFunction(r)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},b(m),u(m,c,"Generator"),u(m,o,(function(){return this})),u(m,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var t=[];for(var r in n)t.push(r);return t.reverse(),function r(){for(;t.length;){var e=t.pop();if(e in n)return r.value=e,r.done=!1,r}return r.done=!0,r}},n.values=k,x.prototype={constructor:x,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!n)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function e(r,e){return a.type="throw",a.arg=n,t.next=r,e&&(t.method="next",t.arg=void 0),!!e}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return e("end");if(i.tryLoc<=this.prev){var s=r.call(i,"catchLoc"),c=r.call(i,"finallyLoc");if(s&&c){if(this.prev<i.catchLoc)return e(i.catchLoc,!0);if(this.prev<i.finallyLoc)return e(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return e(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return e(i.finallyLoc)}}}},abrupt:function(n,t){for(var e=this.tryEntries.length-1;e>=0;--e){var o=this.tryEntries[e];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=n,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,p):this.complete(a)},complete:function(n,t){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&t&&(this.next=t),p},finish:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===n)return this.complete(r.completion,r.afterLoc),w(r),p}},catch:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===n){var e=r.completion;if("throw"===e.type){var o=e.arg;w(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,r){return this.delegate={iterator:k(n),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),p}},n}function s(n,t,r,e,o,i,a){try{var s=n[i](a),c=s.value}catch(n){return void r(n)}s.done?t(c):Promise.resolve(c).then(e,o)}function c(n){return function(){var t=this,r=arguments;return new Promise((function(e,o){var i=n.apply(t,r);function a(n){s(i,e,o,a,c,"next",n)}function c(n){s(i,e,o,a,c,"throw",n)}a(void 0)}))}}var u=document.querySelector("#player1-board"),l=document.querySelector("#player2-board"),A=document.querySelector("#choose-board"),p=document.querySelector("header > div");function d(n){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=Array(10).fill().map((function(){return[{},{},{},{},{},{},{},{},{},{}]}));r.forEach((function(r,e){var o=document.createElement("div");o.classList.add("row"),o.setAttribute("data",e),n.append(o),r.forEach((function(n,r){var e=document.createElement("div");e.classList.add("square"),t&&e.classList.add("enemy"),e.setAttribute("data",r),o.append(e)}))}))}function h(n){return f.apply(this,arguments)}function f(){return(f=c(a().mark((function n(t){var r,e;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:r=t.getCurrentBoard(),e=t.getDiv(),r.forEach((function(n,t){n.forEach((function(n,r){void 0!==n.ship&&e.children[t].children[r].classList.add("ship-square")}))}));case 3:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function g(){var n=document.querySelector(".hit.just-hit");null!==n&&n.classList.remove("just-hit")}function y(){return y=c(a().mark((function n(t){return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return d(u),d(l,!0),d(A),n.next=5,h(t);case 5:o().publish("enemy-loaded");case 6:case"end":return n.stop()}}),n)}))),y.apply(this,arguments)}o().subscribe("game-started",(function(n,t){h(t)}));const v={startBoards:function(n){return y.apply(this,arguments)},renderShips:h,updateBoardAt:function(n,t,r){var e=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=n.getDiv(),i=o.children[t].children[r];i.classList.add("hit"),g(),e||i.classList.add("just-hit")},updateDisplay:function(n){p.innerText=n}},m=function(n){var t=!0===n.hit,r=void 0!==n.ship&&0===n.ship.getSquares()[n.shipSquare];return t||r},b=function(n){var t=n[0]<0||n[0]>9,r=n[1]<0||n[1]>9;return t||r},C=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:9;return Math.floor(Math.random()*(n+1))};function E(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var e,o,i=[],a=!0,s=!1;try{for(r=r.call(n);!(a=(e=r.next()).done)&&(i.push(e.value),!t||i.length!==t);a=!0);}catch(n){s=!0,o=n}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}}(n,t)||function(n,t){if(n){if("string"==typeof n)return B(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?B(n,t):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function B(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}function w(n,t){return{playTurn:function(t,r){return n.receiveAttack(Number(t),Number(r))},getNumber:function(){return t}}}const x=function(n){var t=new Array(n).fill(1);return{isSunk:function(){return t.every((function(n){return 0===n}))},getLength:function(){return n},getHit:function(r){return r>=n||r<0||(t[r]=0),t},getSquares:function(){return t}}};function k(n){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},k(n)}function S(){S=function(){return n};var n={},t=Object.prototype,r=t.hasOwnProperty,e="function"==typeof Symbol?Symbol:{},o=e.iterator||"@@iterator",i=e.asyncIterator||"@@asyncIterator",a=e.toStringTag||"@@toStringTag";function s(n,t,r){return Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),n[t]}try{s({},"")}catch(n){s=function(n,t,r){return n[t]=r}}function c(n,t,r,e){var o=t&&t.prototype instanceof A?t:A,i=Object.create(o.prototype),a=new B(e||[]);return i._invoke=function(n,t,r){var e="suspendedStart";return function(o,i){if("executing"===e)throw new Error("Generator is already running");if("completed"===e){if("throw"===o)throw i;return{value:void 0,done:!0}}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var s=b(a,r);if(s){if(s===l)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===e)throw e="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);e="executing";var c=u(n,t,r);if("normal"===c.type){if(e=r.done?"completed":"suspendedYield",c.arg===l)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(e="completed",r.method="throw",r.arg=c.arg)}}}(n,r,a),i}function u(n,t,r){try{return{type:"normal",arg:n.call(t,r)}}catch(n){return{type:"throw",arg:n}}}n.wrap=c;var l={};function A(){}function p(){}function d(){}var h={};s(h,o,(function(){return this}));var f=Object.getPrototypeOf,g=f&&f(f(w([])));g&&g!==t&&r.call(g,o)&&(h=g);var y=d.prototype=A.prototype=Object.create(h);function v(n){["next","throw","return"].forEach((function(t){s(n,t,(function(n){return this._invoke(t,n)}))}))}function m(n,t){function e(o,i,a,s){var c=u(n[o],n,i);if("throw"!==c.type){var l=c.arg,A=l.value;return A&&"object"==k(A)&&r.call(A,"__await")?t.resolve(A.__await).then((function(n){e("next",n,a,s)}),(function(n){e("throw",n,a,s)})):t.resolve(A).then((function(n){l.value=n,a(l)}),(function(n){return e("throw",n,a,s)}))}s(c.arg)}var o;this._invoke=function(n,r){function i(){return new t((function(t,o){e(n,r,t,o)}))}return o=o?o.then(i,i):i()}}function b(n,t){var r=n.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(n.iterator.return&&(t.method="return",t.arg=void 0,b(n,t),"throw"===t.method))return l;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return l}var e=u(r,n.iterator,t.arg);if("throw"===e.type)return t.method="throw",t.arg=e.arg,t.delegate=null,l;var o=e.arg;return o?o.done?(t[n.resultName]=o.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,l):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,l)}function C(n){var t={tryLoc:n[0]};1 in n&&(t.catchLoc=n[1]),2 in n&&(t.finallyLoc=n[2],t.afterLoc=n[3]),this.tryEntries.push(t)}function E(n){var t=n.completion||{};t.type="normal",delete t.arg,n.completion=t}function B(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(C,this),this.reset(!0)}function w(n){if(n){var t=n[o];if(t)return t.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var e=-1,i=function t(){for(;++e<n.length;)if(r.call(n,e))return t.value=n[e],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:x}}function x(){return{value:void 0,done:!0}}return p.prototype=d,s(y,"constructor",d),s(d,"constructor",p),p.displayName=s(d,a,"GeneratorFunction"),n.isGeneratorFunction=function(n){var t="function"==typeof n&&n.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,d):(n.__proto__=d,s(n,a,"GeneratorFunction")),n.prototype=Object.create(y),n},n.awrap=function(n){return{__await:n}},v(m.prototype),s(m.prototype,i,(function(){return this})),n.AsyncIterator=m,n.async=function(t,r,e,o,i){void 0===i&&(i=Promise);var a=new m(c(t,r,e,o),i);return n.isGeneratorFunction(r)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},v(y),s(y,a,"Generator"),s(y,o,(function(){return this})),s(y,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var t=[];for(var r in n)t.push(r);return t.reverse(),function r(){for(;t.length;){var e=t.pop();if(e in n)return r.value=e,r.done=!1,r}return r.done=!0,r}},n.values=w,B.prototype={constructor:B,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!n)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function e(r,e){return a.type="throw",a.arg=n,t.next=r,e&&(t.method="next",t.arg=void 0),!!e}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return e("end");if(i.tryLoc<=this.prev){var s=r.call(i,"catchLoc"),c=r.call(i,"finallyLoc");if(s&&c){if(this.prev<i.catchLoc)return e(i.catchLoc,!0);if(this.prev<i.finallyLoc)return e(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return e(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return e(i.finallyLoc)}}}},abrupt:function(n,t){for(var e=this.tryEntries.length-1;e>=0;--e){var o=this.tryEntries[e];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=n,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,l):this.complete(a)},complete:function(n,t){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&t&&(this.next=t),l},finish:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===n)return this.complete(r.completion,r.afterLoc),E(r),l}},catch:function(n){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===n){var e=r.completion;if("throw"===e.type){var o=e.arg;E(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,r){return this.delegate={iterator:w(n),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),l}},n}function q(n,t,r,e,o,i,a){try{var s=n[i](a),c=s.value}catch(n){return void r(n)}s.done?t(c):Promise.resolve(c).then(e,o)}function L(n){return function(){var t=this,r=arguments;return new Promise((function(e,o){var i=n.apply(t,r);function a(n){q(i,e,o,a,s,"next",n)}function s(n){q(i,e,o,a,s,"throw",n)}a(void 0)}))}}function j(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var e,o,i=[],a=!0,s=!1;try{for(r=r.call(n);!(a=(e=r.next()).done)&&(i.push(e.value),!t||i.length!==t);a=!0);}catch(n){s=!0,o=n}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}}(n,t)||function(n,t){if(n){if("string"==typeof n)return O(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?O(n,t):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function O(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}const z=function(n){var t=document.querySelector("#player".concat(n,"-board")),r=Array(10).fill().map((function(){return[{},{},{},{},{},{},{},{},{},{}]}));function e(){return r.every((function(n){return n.every((function(n){return void 0===n.ship||n.ship.isSunk()}))}))}function i(n,t,e){var o=[];[-1,0,1].forEach((function(i){if(n+i>=0&&n+i<=9){var a=r[n+i].slice(Math.max(0,t-1),Math.min(10,t+e+1));o.push(a)}}));var i=r[n].slice(t,t+e);return[o.flat(),i]}function a(n,t,e){var o,i;return o=r.filter((function(t,r){return r>=Math.max(0,n-1)&&r<Math.min(10,n+e+1)})),i=r.filter((function(t,r){return r>=n&&r<n+e})),o=o.map((function(n){return n.filter((function(n,r){return r>=Math.max(0,t-1)&&r<=Math.min(9,t+1)}))})),i=i.map((function(n){return n.filter((function(n,r){return r===t}))})),[o=o.flat(),i=i.flat()]}function s(n,t,r,e){var o,s;if("horizontal"===e){var c=j(i(t,r,n),2);o=c[0],s=c[1]}else{var u=j(a(t,r,n),2);o=u[0],s=u[1]}var l=o.some((function(n){return n.hasOwnProperty("ship")})),A=s.length!==n;return l||A}function c(n,t,e){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"horizontal",i=n.getLength();if(!s(i,t,e,o)){if("horizontal"===o){for(var a=0;a<i;a++){var c=r[t][a+e];c.ship=n,c.shipSquare=a,c.direction=o}return n}for(var u=0;u<i;u++){var l=r[t+u][e];l.ship=n,l.shipSquare=u,l.direction=o}return n}}function u(){return(u=L(S().mark((function n(){var t,r,e,o,i,a,s,u;return S().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:for(r=(t=[5,4,3,2,2,1,1,1]).length,e=[];e.length!==r;)o=t[0],i=C(9),a=C(9),s=["horizontal","vertical"][C(1)],u=c(x(o),i,a,s),console.log(u),void 0!==u&&(e.push(u),t.shift());return n.abrupt("return",Promise.resolve(e));case 5:case"end":return n.stop()}}),n)})))).apply(this,arguments)}return{getCurrentBoard:function(){return r},getDiv:function(){return t},placeShip:c,receiveAttack:function(n,t){if(!e()){var s=r[n][t];return m(s)?"Cant hit the same spot twice":(s.hasOwnProperty("ship")?(s.ship.getHit(s.shipSquare),function(n,t,r){if(n.ship.isSunk()){var e=function(n,t,r){var e=n.shipSquare;return"horizontal"===n.direction?[t,r-e]:[t-e,r]}(n,t,r),s=n.ship.getLength();("horizontal"===n.direction?j(i(e[0],e[1],s),1)[0]:j(a(e[0],e[1],s),1)[0]).filter((function(n){return void 0===n.ship})).forEach((function(n){return n.hit=!0})),o().publish("surrounding-squares-sunk")}}(s,n,t)):s.hit=!0,e()?"Ships were just sunk":s)}return"Ships already sunk"},areAllShipsSunk:e,placeRandomShips:function(){return u.apply(this,arguments)}}};var I,P,T=z(1),D=z(2),Y=w(D,1),N=(P=w(I=T,2),Object.assign(P,{playRandom:function(){for(var n=C(),t=C(),r=I.getCurrentBoard()[n][t];m(r);)n=C(),t=C(),r=I.getCurrentBoard()[n][t];return[[n,t],I.receiveAttack(n,t)]},playAround:function n(t){var r,e,o=C(1)*[1,-1][C(1)],i=t[0]+o;r=0===o?C(1)*[1,-1][C(1)]:0;var a,s=t[1]+r;if(b([i,s])||(a=I.getCurrentBoard()[i][s]),b([i,s])||m(a)){var c=E(n(t),2),u=E(c[0],2);i=u[0],s=u[1],e=c[1]}else e=I.receiveAttack(i,s);return[[i,s],e]}}));D.placeRandomShips(),v.startBoards(D);const M={player1:Y,player2:N,player1Board:T,player2Board:D};function _(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var e,o,i=[],a=!0,s=!1;try{for(r=r.call(n);!(a=(e=r.next()).done)&&(i.push(e.value),!t||i.length!==t);a=!0);}catch(n){s=!0,o=n}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}}(n,t)||function(n,t){if(n){if("string"==typeof n)return G(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?G(n,t):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function G(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}function R(n){var t,r,e,o=n.target;t=o.parentElement.getAttribute("data"),r=o.getAttribute("data"),e=M.player1.playTurn(t,r),v.updateBoardAt(M.player2Board,t,r),void 0===e.ship&&(M.player2Board.areAllShipsSunk()?v.updateDisplay("You won!"):M.player1Board.areAllShipsSunk()?v.updateDisplay("Sorry, you lost!"):Z(),document.querySelectorAll(".square.enemy").forEach((function(n){n.removeEventListener("click",R)})))}function U(){document.querySelectorAll(".square.enemy").forEach((function(n){n.addEventListener("click",R)})),v.updateDisplay("Your turn")}function Z(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];v.updateDisplay("Player2 turn"),setTimeout((function(){var e,o;if(Array.isArray(t)&&!r){var i=_(M.player2.playAround(t),2);e=i[0],o=i[1]}else{var a=_(M.player2.playRandom(),2);e=a[0],o=a[1]}v.updateBoardAt(M.player1Board,e[0],e[1]),void 0!==o.ship?Z(2*n,e,o.ship.isSunk()):M.player1Board.areAllShipsSunk()?v.updateDisplay("Sorry, you lost!"):U()}),1e3*Math.random()+n)}function F(n){n.getCurrentBoard().forEach((function(t,r){t.forEach((function(t,e){!0===t.hit&&v.updateBoardAt(n,r,e,!0)}))}))}document.querySelector("#restart").addEventListener("click",(function(){document.location.reload(!0)})),o().subscribe("enemy-loaded",U),o().subscribe("surrounding-squares-sunk",(function(){F(M.player1Board),F(M.player2Board)}));var W=r(379),H=r.n(W),Q=r(795),V=r.n(Q),X=r(569),$=r.n(X),J=r(565),K=r.n(J),nn=r(216),tn=r.n(nn),rn=r(589),en=r.n(rn),on=r(426),an={};function sn(n){return sn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},sn(n)}function cn(n,t){if(null==n)return{};var r,e,o=function(n,t){if(null==n)return{};var r,e,o={},i=Object.keys(n);for(e=0;e<i.length;e++)r=i[e],t.indexOf(r)>=0||(o[r]=n[r]);return o}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(e=0;e<i.length;e++)r=i[e],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(o[r]=n[r])}return o}function un(n){var t=function(n,t){if("object"!==sn(n)||null===n)return n;var r=n[Symbol.toPrimitive];if(void 0!==r){var e=r.call(n,t);if("object"!==sn(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n,"string");return"symbol"===sn(t)?t:String(t)}function ln(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function An(n,t){for(var r=0;r<t.length;r++){var e=t[r];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(n,e.key,e)}}function pn(n,t,r){return t&&An(n.prototype,t),r&&An(n,r),Object.defineProperty(n,"prototype",{writable:!1}),n}function dn(n,t,r){return t in n?Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[t]=r,n}an.styleTagTransform=en(),an.setAttributes=K(),an.insert=$().bind(null,"head"),an.domAPI=V(),an.insertStyleElement=tn(),H()(on.Z,an),on.Z&&on.Z.locals&&on.Z.locals;var hn=function(){function n(t,r,e){ln(this,n),dn(this,"popupBoard",document.querySelector("#pop-up .board")),this.rowCoord=t,this.columnCoord=r,this.shipLength=e,this.iSquareBefore=Math.max(r-1,0),this.iRowBefore=Math.max(t-1,0),this.rowBefore=Array.from(Array.from(this.popupBoard.children)[this.iRowBefore].children),this.surroundingSquares=[]}return pn(n,[{key:"getHorizontal",value:function(){var n=Math.min(this.columnCoord+this.shipLength,9),t=Math.min(this.rowCoord+1,9),r=Array.from(Array.from(this.popupBoard.children)[this.rowCoord].children),e=Array.from(Array.from(this.popupBoard.children)[t].children);this.surroundingSquares=[r[this.iSquareBefore],r[n]];var o=this.rowBefore.slice(this.iSquareBefore,n+1),i=e.slice(this.iSquareBefore,n+1);return this.surroundingSquares=this.surroundingSquares.concat(o),this.surroundingSquares=this.surroundingSquares.concat(i),this.surroundingSquares}},{key:"getVertical",value:function(){var n=this,t=Math.min(this.columnCoord+1,9),r=Math.min(this.rowCoord+this.shipLength,9);this.rowBefore=this.rowBefore.slice(this.iSquareBefore,t+1);var e=Array.from(Array.from(this.popupBoard.children)[r].children).slice(this.iSquareBefore,t+1),o=Array.from(this.popupBoard.children).slice(this.rowCoord,this.rowCoord+this.shipLength).map((function(r){return Array.from(r.children).slice(n.iSquareBefore,t+1)})).flat();return this.surroundingSquares=this.surroundingSquares.concat(this.rowBefore),this.surroundingSquares=this.surroundingSquares.concat(e),this.surroundingSquares=this.surroundingSquares.concat(o),this.surroundingSquares}}]),n}(),fn=function(){function n(t,r,e,o,i,a){ln(this,n),dn(this,"popupBoard",document.querySelector("#pop-up .board")),this.ship=t,this.rowCoord=r,this.columnCoord=e,this.shipLength=o,this.squaresSurrounding=i,this.squaresBehind=a,this.prospectiveSquares=[]}return pn(n,[{key:"isClashing",value:function(){var n=this.squaresSurrounding,t=this.ship.id,r=(n[t],cn(n,[t].map(un))),e=Object.values(r).flat(),o=this.squaresBehind,i=this.ship.id,a=(o[i],cn(o,[i].map(un))),s=Object.values(a).flat();return this.prospectiveSquares.some((function(n){return e.includes(n)||s.includes(n)}))}},{key:"horizontal",value:function(){if(this.columnCoord+this.shipLength>10)return!0;var n=Array.from(Array.from(this.popupBoard.children)[this.rowCoord].children);return this.prospectiveSquares=n.slice(this.columnCoord,this.columnCoord+this.shipLength),this.isClashing()}},{key:"vertical",value:function(){var n=this;return this.rowCoord+this.shipLength>10||(Array.from(this.popupBoard.children).slice(this.rowCoord,this.rowCoord+this.shipLength).forEach((function(t){return Array.from(t.children).forEach((function(t){Number(t.getAttribute("data"))===n.columnCoord&&n.prospectiveSquares.push(t)}))})),this.isClashing())}}]),n}();function gn(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var e,o,i=[],a=!0,s=!1;try{for(r=r.call(n);!(a=(e=r.next()).done)&&(i.push(e.value),!t||i.length!==t);a=!0);}catch(n){s=!0,o=n}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}}(n,t)||function(n,t){if(n){if("string"==typeof n)return yn(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?yn(n,t):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function yn(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}var vn=document.querySelector("#pop-up"),mn=document.querySelector("#ships"),bn=document.querySelectorAll("#pop-up .ship"),Cn=document.querySelector("#pop-up .board"),En=document.querySelector("#start"),Bn={carrier:[],battleship:[],cruiser:[],submarine1:[],submarine2:[],destroyer1:[],destroyer2:[],destroyer3:[]},wn={carrier:[],battleship:[],cruiser:[],submarine1:[],submarine2:[],destroyer1:[],destroyer2:[],destroyer3:[]};function xn(n){n.target.parentElement.classList.toggle("vertical")}function kn(n,t){return Number(getComputedStyle(n).getPropertyValue(t).match(/\d/g).join(""))}function Sn(n){var t=Number(n.getAttribute("coordrow")),r=Number(n.getAttribute("coordcolumn"));return[Number(n.getAttribute("data")),t,r]}function qn(n,t,r,e){var o=[],i=[],a=kn(n,"--square-size"),s=kn(n,"--board-gap");return function(n){var t=Bn[n.id];Bn[n.id].forEach((function(n){return n.classList.remove("behind")}));var r=wn[n.id];wn[n.id].forEach((function(t){t.classList.remove("hit"),wn[n.id]={},Object.values(wn).forEach((function(n){Array.isArray(n)&&n.forEach((function(n){return n.classList.add("hit")}))}))}))}(n),n.classList.contains("vertical")?(o=(o=Array.from(Cn.children).slice(t,t+e).map((function(n){return function(n,t){return Array.from(t.children).filter((function(t){return Number(t.getAttribute("data"))===n}))}(r,n)}))).flat(),i=new hn(t,r,e).getVertical()):(o=Array.from(Array.from(Cn.children)[t].children).slice(r,r+e),i=new hn(t,r,e).getHorizontal(),o.forEach((function(n){return n.classList.add("behind")}))),i.forEach((function(n){return n.classList.add("hit")})),n.style.top="".concat((a+s)*t,"px"),n.style.left="".concat((a+s)*r,"px"),Bn[n.id]=o,wn[n.id]=i,o}function Ln(n){var t=n.target.parentElement,r=gn(Sn(t),3),e=r[0],o=r[1],i=r[2];(!new fn(t,o,i,e,Bn,wn).horizontal()&&t.classList.contains("vertical")||!new fn(t,o,i,e,Bn,wn).vertical()&&!t.classList.contains("vertical"))&&(t.classList.toggle("vertical"),qn(t,o,i,e))}bn.forEach((function(n){n.addEventListener("dragstart",(function(n){setTimeout((function(){n.target.classList.add("hide")}),0),n.dataTransfer.setData("text/plain",n.target.id)})),n.addEventListener("dragend",(function(n){setTimeout((function(){n.target.classList.remove("hide")}),0)})),n.addEventListener("click",xn)})),Array.from(Cn.children).forEach((function(n){Array.from(n.children).forEach((function(t){var r=Number(n.getAttribute("data"));t.addEventListener("drop",(function(e){e.preventDefault();var o=e.dataTransfer.getData("text/plain"),i=document.getElementById(o),a=Number(i.getAttribute("data"));e.target.classList.remove("drag-over");var s=Number(t.getAttribute("data"));(!new fn(i,r,s,a,Bn,wn).horizontal()&&!i.classList.contains("vertical")||!new fn(i,r,s,a,Bn,wn).vertical()&&i.classList.contains("vertical"))&&(i.classList.add("dragged-in"),i.removeEventListener("click",xn),i.addEventListener("click",Ln),i.setAttribute("coordcolumn",s),i.setAttribute("coordrow",n.getAttribute("data")),qn(i,r,s,a),Cn.appendChild(i))})),t.addEventListener("dragenter",(function(n){n.preventDefault(),n.target.classList.add("drag-over")})),t.addEventListener("dragover",(function(n){return n.preventDefault()})),t.addEventListener("dragleave",(function(n){n.preventDefault(),n.target.classList.remove("drag-over")}))}))})),En.addEventListener("click",(function(){0===mn.children.length&&(bn.forEach((function(n){var t=gn(Sn(n),3),r=t[0],e=t[1],o=t[2],i=x(r);M.player1Board.placeShip(i,e,o)})),vn.classList.add("inactive"),document.querySelector("#game").classList.remove("inactive"),o().publish("game-started",M.player1Board))})),En.addEventListener("mouseover",(function(){0!==mn.children.length?En.classList.add("not-yet"):En.classList.add("ready")})),En.addEventListener("mouseout",(function(){En.classList.remove("not-yet"),En.classList.remove("ready")}))},917:(n,t,r)=>{"use strict";r.d(t,{Z:()=>s});var e=r(537),o=r.n(e),i=r(645),a=r.n(i)()(o());a.push([n.id,'/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n:root {\n  box-sizing: border-box;\n}\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n',"",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;AACD;EACE,sBAAsB;AACxB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB",sourcesContent:['/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n:root {\n  box-sizing: border-box;\n}\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n'],sourceRoot:""}]);const s=a},426:(n,t,r)=>{"use strict";r.d(t,{Z:()=>u});var e=r(537),o=r.n(e),i=r(645),a=r.n(i),s=r(917),c=a()(o());c.i(s.Z),c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),c.push([n.id,':root {\n  --square-size: 43px;\n  --board-gap: 2px;\n  --board-size: calc(\n    calc(var(--square-size) * 10) + calc(var(--board-gap) * 10)\n  );\n  --color-target: blue;\n  --color-ship: rgb(136, 134, 134);\n  --color-ship-hit: rgb(232, 108, 108);\n  --color-ship-just-hit: rgb(173, 17, 17);\n  --color-water: rgb(157, 240, 237);\n  --color-hit: rgb(41, 125, 122);\n  --color-water-dark: rgb(37, 63, 75);\n  --color-background: #27272a;\n  --color-light: #f4f4f5;\n  --color-complementary-light: rgb(205, 226, 72);\n  --color-complementary-dark: rgb(60, 65, 32);\n  font-family: "Roboto", sans-serif;\n}\n\n/* * {\n  outline: dashed red;\n} */\nbody {\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  color: var(--color-light);\n}\n\n#game {\n  background-color: var(--color-background);\n  height: 100vh;\n  width: 100vw;\n  display: grid;\n  grid-template-rows: 1fr 5fr 50px;\n  align-items: center;\n}\n\n#pop-up.inactive,\n#game.inactive {\n  display: none;\n  position: absolute;\n  left: -100%;\n  transition: all 2s;\n}\n\nh1,\nh3 {\n  font-size: 1.5rem;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: end;\n  position: relative;\n}\n\nheader > div {\n  background-color: var(--color-water-dark);\n  width: max(400px, 40vw);\n  color: var(--color-light);\n  padding: 20px;\n  text-align: center;\n  font-size: 2rem;\n  letter-spacing: 0.2rem;\n  border-radius: 1rem;\n}\n\nheader > button {\n  position: absolute;\n  top: 80px;\n  right: min(5vw, 80px);\n}\n\nmain {\n  width: 100%;\n  display: grid;\n  grid-template-rows: 50px 1fr;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  gap: auto;\n  align-items: center;\n}\n\nmain > h1 {\n  color: var(--color-light);\n  grid-row: 1 / 2;\n}\n\n.board {\n  width: var(--board-size);\n  height: var(--board-size);\n  background-color: var(--color-background);\n  display: flex;\n  flex-direction: column;\n  grid-template-rows: repeat(10, 1fr);\n  gap: var(--board-gap);\n}\n\n.row {\n  display: flex;\n  height: auto;\n  gap: var(--board-gap);\n  position: relative;\n}\n\n.square {\n  background-color: var(--color-water);\n  width: var(--square-size);\n  height: var(--square-size);\n}\n\n.square.enemy {\n  background-color: #52525b;\n}\n\n.square.enemy:hover {\n  cursor: crosshair;\n}\n\n.square.enemy.hit {\n  pointer-events: none;\n}\n\n.ship-square:not(.enemy:not(.hit)) {\n  --border-size: 6px;\n  --border-color: rgb(61, 55, 55);\n  background-color: var(--color-ship);\n  width: calc(var(--square-size) - calc(var(--border-size) * 2));\n  height: calc(var(--square-size) - calc(var(--border-size) * 2));\n  border: var(--border-color) solid var(--border-size);\n}\n\n.square.ship-square.hit {\n  background-color: var(--color-ship-hit);\n}\n\n.square.ship-square.hit.just-hit {\n  background-color: var(--color-ship-just-hit);\n}\n\n.square.hit {\n  transition: background-color 0.5s;\n  background-color: var(--color-hit);\n  position: relative;\n}\n\n.square.hit:not(.ship-square)::before {\n  text-align: center;\n  content: ".";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -70%);\n}\n\n.square.hit.just-hit {\n  outline: solid yellow 1px;\n}\n\n.square.enemy:hover {\n  background-color: var(--color-target);\n}\n\nfooter {\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  width: 100%;\n  gap: 2vw;\n  background-color: var(--color-background);\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,\n    Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-size: 1.5rem;\n}\n\n#github-logo {\n  height: 30px;\n}\n\n#pop-up {\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--color-background);\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-template-rows: 100px 50px 1fr;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas:\n    "title title"\n    "description description"\n    "board ships";\n}\n\n#pop-up article {\n  grid-area: title;\n}\n\n#pop-up #description {\n  grid-area: description;\n  justify-self: stretch;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 50px;\n  padding: 20px;\n  position: relative;\n}\n\n#pop-up .board {\n  grid-area: board;\n  justify-self: end;\n}\n\n#pop-up article {\n  background: linear-gradient(\n    to bottom,\n    rgb(135, 135, 236),\n    var(--color-water)\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-align: center;\n}\n\nbutton {\n  background-color: var(--color-complementary-light);\n  border-radius: 0.8rem;\n  box-shadow: 5px 5px var(--color-complementary-dark);\n  padding: 10px 16px 10px 16px;\n  border: none;\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--color-water-dark);\n}\n\nbutton:hover {\n  background-color: var(--color-complementary-light);\n  cursor: pointer;\n}\n\nbutton.not-yet {\n  pointer-events: none;\n}\n\nbutton:active {\n  position: relative;\n  left: 3px;\n  top: 2px;\n  box-shadow: 2px 2px 1px black;\n}\n\nbutton.not-yet:hover {\n  box-shadow: 0px 0px 2px 2px red;\n}\n\nbutton.not-yet:hover::after {\n  content: "Place all your ships first";\n  color: red;\n  font-size: 1rem;\n  position: absolute;\n  bottom: 0%;\n  right: 0%;\n}\n\n#title {\n  font-size: 3rem;\n  font-weight: bold;\n  letter-spacing: 0.3rem;\n  padding: 20px;\n}\n\n#ships-wrapper {\n  grid-area: ships;\n  justify-self: start;\n  position: relative;\n  align-items: flex-start;\n}\n\n#ships {\n  display: flex;\n  justify-items: flex-start;\n  gap: 20px;\n  column-gap: 20px;\n  flex-wrap: wrap;\n  position: relative;\n  height: var(--board-size);\n  max-width: var(--board-size);\n  padding: 20px;\n  align-items: flex-start;\n}\n\n#ships .ship.hide {\n  opacity: 0.3;\n  display: none;\n}\n\n.ship {\n  display: flex;\n  gap: var(--board-gap);\n  background-color: grey;\n  min-height: var(--square-size);\n}\n\n.ship.vertical {\n  flex-direction: column;\n}\n\n#pop-up .board {\n  max-height: var(--board-size);\n  position: relative;\n}\n\n#pop-up .board .ship {\n  position: absolute;\n}\n\n.square.drag-over {\n  background-color: yellow;\n}\n\n.square.behind {\n  background-color: green;\n}\n\n@media only screen and (max-width: 950px) {\n  main {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: space-evenly;\n    gap: 30px;\n    padding-top: 20px;\n  }\n\n  header {\n    align-self: center;\n    width: 100%;\n  }\n\n  #game {\n    background-color: var(--color-background);\n    height: auto;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  #pop-up {\n    height: auto;\n    background-color: var(--color-background);\n    display: flex;\n    flex-direction: column;\n    justify-items: center;\n    align-items: center;\n    gap: 20px;\n    min-height: 100%;\n  }\n\n  #ships {\n    height: 50%;\n  }\n}\n\n@keyframes wave {\n  0% {\n    transform: translate(-50%, -75%) rotate(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -75%) rotate(360deg);\n  }\n}\n\nbutton.ready:hover {\n  background-image: linear-gradient(\n    to right,\n    var(--color-complementary-light) 0%,\n    var(--color-water) 100%\n  );\n  animation: slidebg 2s linear infinite;\n}\n\n@keyframes slidebg {\n  to {\n    background-position: 18vw;\n  }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['@import "./reset.css";\n\n@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");\n\n:root {\n  --square-size: 43px;\n  --board-gap: 2px;\n  --board-size: calc(\n    calc(var(--square-size) * 10) + calc(var(--board-gap) * 10)\n  );\n  --color-target: blue;\n  --color-ship: rgb(136, 134, 134);\n  --color-ship-hit: rgb(232, 108, 108);\n  --color-ship-just-hit: rgb(173, 17, 17);\n  --color-water: rgb(157, 240, 237);\n  --color-hit: rgb(41, 125, 122);\n  --color-water-dark: rgb(37, 63, 75);\n  --color-background: #27272a;\n  --color-light: #f4f4f5;\n  --color-complementary-light: rgb(205, 226, 72);\n  --color-complementary-dark: rgb(60, 65, 32);\n  font-family: "Roboto", sans-serif;\n}\n\n/* * {\n  outline: dashed red;\n} */\nbody {\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  color: var(--color-light);\n}\n\n#game {\n  background-color: var(--color-background);\n  height: 100vh;\n  width: 100vw;\n  display: grid;\n  grid-template-rows: 1fr 5fr 50px;\n  align-items: center;\n}\n\n#pop-up.inactive,\n#game.inactive {\n  display: none;\n  position: absolute;\n  left: -100%;\n  transition: all 2s;\n}\n\nh1,\nh3 {\n  font-size: 1.5rem;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: end;\n  position: relative;\n}\n\nheader > div {\n  background-color: var(--color-water-dark);\n  width: max(400px, 40vw);\n  color: var(--color-light);\n  padding: 20px;\n  text-align: center;\n  font-size: 2rem;\n  letter-spacing: 0.2rem;\n  border-radius: 1rem;\n}\n\nheader > button {\n  position: absolute;\n  top: 80px;\n  right: min(5vw, 80px);\n}\n\nmain {\n  width: 100%;\n  display: grid;\n  grid-template-rows: 50px 1fr;\n  grid-template-columns: repeat(2, 1fr);\n  justify-items: center;\n  gap: auto;\n  align-items: center;\n}\n\nmain > h1 {\n  color: var(--color-light);\n  grid-row: 1 / 2;\n}\n\n.board {\n  width: var(--board-size);\n  height: var(--board-size);\n  background-color: var(--color-background);\n  display: flex;\n  flex-direction: column;\n  grid-template-rows: repeat(10, 1fr);\n  gap: var(--board-gap);\n}\n\n.row {\n  display: flex;\n  height: auto;\n  gap: var(--board-gap);\n  position: relative;\n}\n\n.square {\n  background-color: var(--color-water);\n  width: var(--square-size);\n  height: var(--square-size);\n}\n\n.square.enemy {\n  background-color: #52525b;\n}\n\n.square.enemy:hover {\n  cursor: crosshair;\n}\n\n.square.enemy.hit {\n  pointer-events: none;\n}\n\n.ship-square:not(.enemy:not(.hit)) {\n  --border-size: 6px;\n  --border-color: rgb(61, 55, 55);\n  background-color: var(--color-ship);\n  width: calc(var(--square-size) - calc(var(--border-size) * 2));\n  height: calc(var(--square-size) - calc(var(--border-size) * 2));\n  border: var(--border-color) solid var(--border-size);\n}\n\n.square.ship-square.hit {\n  background-color: var(--color-ship-hit);\n}\n\n.square.ship-square.hit.just-hit {\n  background-color: var(--color-ship-just-hit);\n}\n\n.square.hit {\n  transition: background-color 0.5s;\n  background-color: var(--color-hit);\n  position: relative;\n}\n\n.square.hit:not(.ship-square)::before {\n  text-align: center;\n  content: ".";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -70%);\n}\n\n.square.hit.just-hit {\n  outline: solid yellow 1px;\n}\n\n.square.enemy:hover {\n  background-color: var(--color-target);\n}\n\nfooter {\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  width: 100%;\n  gap: 2vw;\n  background-color: var(--color-background);\n  color: white;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,\n    Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-size: 1.5rem;\n}\n\n#github-logo {\n  height: 30px;\n}\n\n#pop-up {\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--color-background);\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  grid-template-rows: 100px 50px 1fr;\n  grid-template-columns: 1fr 1fr;\n  grid-template-areas:\n    "title title"\n    "description description"\n    "board ships";\n}\n\n#pop-up article {\n  grid-area: title;\n}\n\n#pop-up #description {\n  grid-area: description;\n  justify-self: stretch;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 50px;\n  padding: 20px;\n  position: relative;\n}\n\n#pop-up .board {\n  grid-area: board;\n  justify-self: end;\n}\n\n#pop-up article {\n  background: linear-gradient(\n    to bottom,\n    rgb(135, 135, 236),\n    var(--color-water)\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-align: center;\n}\n\nbutton {\n  background-color: var(--color-complementary-light);\n  border-radius: 0.8rem;\n  box-shadow: 5px 5px var(--color-complementary-dark);\n  padding: 10px 16px 10px 16px;\n  border: none;\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--color-water-dark);\n}\n\nbutton:hover {\n  background-color: var(--color-complementary-light);\n  cursor: pointer;\n}\n\nbutton.not-yet {\n  pointer-events: none;\n}\n\nbutton:active {\n  position: relative;\n  left: 3px;\n  top: 2px;\n  box-shadow: 2px 2px 1px black;\n}\n\nbutton.not-yet:hover {\n  box-shadow: 0px 0px 2px 2px red;\n}\n\nbutton.not-yet:hover::after {\n  content: "Place all your ships first";\n  color: red;\n  font-size: 1rem;\n  position: absolute;\n  bottom: 0%;\n  right: 0%;\n}\n\n#title {\n  font-size: 3rem;\n  font-weight: bold;\n  letter-spacing: 0.3rem;\n  padding: 20px;\n}\n\n#ships-wrapper {\n  grid-area: ships;\n  justify-self: start;\n  position: relative;\n  align-items: flex-start;\n}\n\n#ships {\n  display: flex;\n  justify-items: flex-start;\n  gap: 20px;\n  column-gap: 20px;\n  flex-wrap: wrap;\n  position: relative;\n  height: var(--board-size);\n  max-width: var(--board-size);\n  padding: 20px;\n  align-items: flex-start;\n}\n\n#ships .ship.hide {\n  opacity: 0.3;\n  display: none;\n}\n\n.ship {\n  display: flex;\n  gap: var(--board-gap);\n  background-color: grey;\n  min-height: var(--square-size);\n}\n\n.ship.vertical {\n  flex-direction: column;\n}\n\n#pop-up .board {\n  max-height: var(--board-size);\n  position: relative;\n}\n\n#pop-up .board .ship {\n  position: absolute;\n}\n\n.square.drag-over {\n  background-color: yellow;\n}\n\n.square.behind {\n  background-color: green;\n}\n\n@media only screen and (max-width: 950px) {\n  main {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: space-evenly;\n    gap: 30px;\n    padding-top: 20px;\n  }\n\n  header {\n    align-self: center;\n    width: 100%;\n  }\n\n  #game {\n    background-color: var(--color-background);\n    height: auto;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  #pop-up {\n    height: auto;\n    background-color: var(--color-background);\n    display: flex;\n    flex-direction: column;\n    justify-items: center;\n    align-items: center;\n    gap: 20px;\n    min-height: 100%;\n  }\n\n  #ships {\n    height: 50%;\n  }\n}\n\n@keyframes wave {\n  0% {\n    transform: translate(-50%, -75%) rotate(0deg);\n  }\n\n  100% {\n    transform: translate(-50%, -75%) rotate(360deg);\n  }\n}\n\nbutton.ready:hover {\n  background-image: linear-gradient(\n    to right,\n    var(--color-complementary-light) 0%,\n    var(--color-water) 100%\n  );\n  animation: slidebg 2s linear infinite;\n}\n\n@keyframes slidebg {\n  to {\n    background-position: 18vw;\n  }\n}\n'],sourceRoot:""}]);const u=c},645:n=>{"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var r="",e=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),e&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=n(t),e&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(n,r,e,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(e)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var u=0;u<n.length;u++){var l=[].concat(n[u]);e&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:n=>{"use strict";n.exports=function(n){var t=n[1],r=n[3];if(!r)return t;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),i="/*# ".concat(o," */"),a=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},798:function(n,t,r){n=r.nmd(n),function(r,e){"use strict";var o={};r.PubSub?(o=r.PubSub,console.warn("PubSub already loaded, using existing version")):(r.PubSub=o,function(n){var t={},r=-1;function e(n,t,r){try{n(t,r)}catch(n){setTimeout(function(n){return function(){throw n}}(n),0)}}function o(n,t,r){n(t,r)}function i(n,r,i,a){var s,c=t[r],u=a?o:e;if(Object.prototype.hasOwnProperty.call(t,r))for(s in c)Object.prototype.hasOwnProperty.call(c,s)&&u(c[s],n,i)}function a(n){var r=String(n);return Boolean(Object.prototype.hasOwnProperty.call(t,r)&&function(n){var t;for(t in n)if(Object.prototype.hasOwnProperty.call(n,t))return!0;return!1}(t[r]))}function s(n,t,r,e){var o=function(n,t,r){return function(){var e=String(n),o=e.lastIndexOf(".");for(i(n,n,t,r);-1!==o;)o=(e=e.substr(0,o)).lastIndexOf("."),i(n,e,t,r);i(n,"*",t,r)}}(n="symbol"==typeof n?n.toString():n,t,e);return!!function(n){for(var t=String(n),r=a(t)||a("*"),e=t.lastIndexOf(".");!r&&-1!==e;)e=(t=t.substr(0,e)).lastIndexOf("."),r=a(t);return r}(n)&&(!0===r?o():setTimeout(o,0),!0)}n.publish=function(t,r){return s(t,r,!1,n.immediateExceptions)},n.publishSync=function(t,r){return s(t,r,!0,n.immediateExceptions)},n.subscribe=function(n,e){if("function"!=typeof e)return!1;n="symbol"==typeof n?n.toString():n,Object.prototype.hasOwnProperty.call(t,n)||(t[n]={});var o="uid_"+String(++r);return t[n][o]=e,o},n.subscribeAll=function(t){return n.subscribe("*",t)},n.subscribeOnce=function(t,r){var e=n.subscribe(t,(function(){n.unsubscribe(e),r.apply(this,arguments)}));return n},n.clearAllSubscriptions=function(){t={}},n.clearSubscriptions=function(n){var r;for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&0===r.indexOf(n)&&delete t[r]},n.countSubscriptions=function(n){var r,e,o=0;for(r in t)if(Object.prototype.hasOwnProperty.call(t,r)&&0===r.indexOf(n)){for(e in t[r])o++;break}return o},n.getSubscriptions=function(n){var r,e=[];for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&0===r.indexOf(n)&&e.push(r);return e},n.unsubscribe=function(r){var e,o,i,a="string"==typeof r&&(Object.prototype.hasOwnProperty.call(t,r)||function(n){var r;for(r in t)if(Object.prototype.hasOwnProperty.call(t,r)&&0===r.indexOf(n))return!0;return!1}(r)),s=!a&&"string"==typeof r,c="function"==typeof r,u=!1;if(!a){for(e in t)if(Object.prototype.hasOwnProperty.call(t,e)){if(o=t[e],s&&o[r]){delete o[r],u=r;break}if(c)for(i in o)Object.prototype.hasOwnProperty.call(o,i)&&o[i]===r&&(delete o[i],u=!0)}return u}n.clearSubscriptions(r)}}(o)),void 0!==n&&n.exports&&(t=n.exports=o),t.PubSub=o,n.exports=t=o}("object"==typeof window&&window||this)},379:n=>{"use strict";var t=[];function r(n){for(var r=-1,e=0;e<t.length;e++)if(t[e].identifier===n){r=e;break}return r}function e(n,e){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],u=e.base?c[0]+e.base:c[0],l=i[u]||0,A="".concat(u," ").concat(l);i[u]=l+1;var p=r(A),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(d);else{var h=o(d,e);e.byIndex=s,t.splice(s,0,{identifier:A,updater:h,references:1})}a.push(A)}return a}function o(n,t){var r=t.domAPI(t);return r.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;r.update(n=t)}else r.remove()}}n.exports=function(n,o){var i=e(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=r(i[a]);t[s].references--}for(var c=e(n,o),u=0;u<i.length;u++){var l=r(i[u]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},569:n=>{"use strict";var t={};n.exports=function(n,r){var e=function(n){if(void 0===t[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}t[n]=r}return t[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(r)}},216:n=>{"use strict";n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,r)=>{"use strict";n.exports=function(n){var t=r.nc;t&&n.setAttribute("nonce",t)}},795:n=>{"use strict";n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(r){!function(n,t,r){var e="";r.supports&&(e+="@supports (".concat(r.supports,") {")),r.media&&(e+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(e+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),e+=r.css,o&&(e+="}"),r.media&&(e+="}"),r.supports&&(e+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(e,n,t.options)}(t,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{"use strict";n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},n=>{n(n.s=632)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,